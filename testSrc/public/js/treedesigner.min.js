/**
  * createTreeCtrl 是生成树结构的控件，含有搜索功能
  * @param strUrl 生成树的数据来源。返回树结构数据。
  * @param widgetId 外部传入的树控件Id（方便外部使用），不传入将使用默认Id。
  * @param title 弹出框的标题
  * @param resultFun 确定事件后的回调函数，原型bool resultFun(data)，返回值表示选中是否有错（true有错，则不关闭选择框；false无错，会关闭选择框）
  * @param innerContId 内嵌界面的容器ID。如果为空，则以弹出框显示；否则将界面显示在容器
  * @param isMultiple 是否单选
*/
function createTreeCtrl(d,a,g,e,f,c){var h=this;a=null==a?"commonTree5w4ey":a;var b="",b=(c?b+('\x3cdiv id\x3d"'+a+'" style\x3d"width:330px;height:450px;" \x3e'):b+('\x3cdiv id\x3d"'+a+'Box"\x3e\x3cdiv id\x3d"'+a+'" class\x3d"easyui-window" title\x3d"'+g+'" style\x3d"width:330px;height:450px;" data-options\x3d"modal:true,collapsible:false,minimizable:false,maximizable:false,footer:\'#ft2\'"\x3e'))+'\x3cdiv class\x3d"easyui-layout" data-options\x3d"fit:true,border:false" style\x3d"overflow:hidden;"\x3e\x3cdiv data-options\x3d"region:\'north\',border:false"\x3e\x3cinput id\x3d"findCTree5w4ey" class\x3d"easyui-searchbox" prompt\x3d"\u8f93\u5165\u5185\u5bb9\u67e5\u627e" style\x3d"width:100%;height:30px;" data-options\x3d"searcher:searchCTreeNode5w4ey"/\x3e\x3c/div\x3e\x3cdiv data-options\x3d"region:\'center\',border:false"\x3e\x3cul id\x3d"cTreeList5w4ey" class\x3d"easyui-tree" style\x3d"overflow:hidden;"\x3e\x3c/ul\x3e\x3c/div\x3e\x3c/div\x3e',b=c?b+"\x3c/div\x3e":b+'\x3cdiv id\x3d"ft2" align\x3d"center" style\x3d"padding:5px 0;border:1px solid #95B8E7"\x3e\x3ca class\x3d"easyui-linkbutton" data-options\x3d"iconCls:\'icon-ok\'" onclick\x3d"commonTreeClick()"\x3e\u786e\u5b9a\x3c/a\x3e \x26nbsp;\x26nbsp;\x3ca class\x3d"easyui-linkbutton" data-options\x3d"iconCls:\'icon-cancel\'" onClick\x3d"commonTreeCancel()"\x3e\u53d6\u6d88\x3c/a\x3e\x3c/div\x3e\x3c/div\x3e\x3c/div\x3e';c?0==$("#"+a).length&&($("#"+c).html(b),$.parser.parse("#"+c)):0==$("#"+a).length?($("body").append(b),$.parser.parse($("#"+a+"Box"))):$("#"+a).window("open");this.commonTreeClick=function(){var b;(b=e?$("#cTreeList5w4ey").tree("getChecked"):$("#cTreeList5w4ey").tree("getSelected"))?f&&f(b)||c||$("#"+a).window("close"):showError("\u6ca1\u6709\u9009\u62e9\u4efb\u4f55\u9879\uff0c\u8bf7\u5148\u9009\u62e9\u4e00\u9879")};this.commonTreeCancel=function(){$("#"+a).window("close")};d&&$("#cTreeList5w4ey").tree({url:d,method:"GET",dataType:"json",animate:!0,checkbox:e,onDblClick:function(a){e?a.checked?$("#cTreeList5w4ey").tree("uncheck",a.target):$("#cTreeList5w4ey").tree("check",a.target):h.commonTreeClick()},onLoadSuccess:function(a,b){$("#cTreeList5w4ey").on("mouseenter","span.tree-title",function(){var a=$(this).parents(".window").css("z-index")+100,b=$(this).text(),c=$(this).width()+4,d=$(this).position().left,e=$("#cTreeList5w4ey").width();c+d>e&&(0!=$("body").find(".tip").length?$("body").find(".tip").remove():(b='\x3cdiv class\x3d"tip"\x3e'+b+"\x3c/div\x3e",$("body").append(b),$(".tip").css({top:$(this).offset().top+15,left:$(this).offset().left,"z-index":a})))});$("#cTreeList5w4ey").on("mouseleave","span.tree-title",function(){0!=$("body").find(".tip").length&&$("body").find(".tip").remove()})},onLoadError:function(){showError("\u8bfb\u53d6\u6570\u636e\u51fa\u9519")}})}function searchCTreeNode5w4ey(d){console.log(d);searchTreeNode($("#cTreeList5w4ey"),d)};
//# sourceMappingURL=treedesigner.min.js.map
