[ {
	"id" : "baseObjId",
    "text" : "基本对象",
    "domType": "root",
	"state" : "closed",
	"children" : [ {
		"id" : "mathCal",
        "text" : "算术运算",
        "domType": "root",
		"children" : [ {
			"id" : "+",
			"text" : "+(加或字符串连接)",
			"decripHtml" : "+<br/>半角加号。两数值加、日期加时间片或两字符串连接。如：1+2结果等于：3；'ab'+'cd'结果等于：'abcd'；DateTime.Now+TimeSpan.FromDays(1)结果等于加了一天的日期，比如现在是：2011-1-1 8:0:0，则日期是：2011-1-2 8:0:0</li>"
		}, {
			"id" : "-",
            "text" : "-(减)",
            "decripHtml" : "<li>-<br/>半角减号。两数值减、两日期减得到时间片。如：1-2结果等于：-1；vsp=DateTime.Now-DateTime.Parse('2011-1-1')vsp.Hours结果等于两日期相减的时间片，比如现在是：2011-1-1 8:0:0，则上例中的时间片的小时数为：8</li>"
		}, {
			"id" : "*",
            "text" : "*(数值乘)",
            "decripHtml" : "<li>*<br/>半角星号。如：2.5*2结果等于：5</li>"
		}, {
			"id" : "/",
            "text" : "/(数值除)",
            "decripHtml" : "/<br/>半角/符。如：10/3结果等于：3.333333333333333"
		}, {
			"id" : "%",
            "text" : "%(数值取余)",
            "decripHtml" : "%<br/>半角百分号。两个数相除，取余数。如：10%3结果等于：1"
		}, {
			"id" : "=",
            "text" : "=(赋值)",
            "decripHtml" : "=<br/>半角等号。每个赋值表达式只允许给一个变量赋值。如：myName='张三'结果等于：'张三'"
		} ]
	}, {
		"id" : "logicCompare",
        "text" : "逻辑比较",
        "domType": "root",
		"children" : [ {
			"id" : ">",
            "text" : ">(大于比较)",
            "decripHtml" : "><br/>半角大于号。如：10>2结果等于：true"
		}, {
			"id" : "<",
            "text" : "<(小于比较)",
            "decripHtml" : "<<br/>半角小于号。如：10<2结果等于：false"
		}, {
			"id" : "==",
            "text" : "==(等于比较)",
            "decripHtml" : "==<br/>两个半角等号，中间无空格。如：10==2结果等于：false"
		}, {
			"id" : "!=",
            "text" : "!=(不等于比较)",
            "decripHtml" : "!=<br/>半角感叹号加等号，中间无空格。如：10!=2结果等于：true"
		}, {
			"id" : ">=",
            "text" : ">=(大于等于比较)",
            "decripHtml" : ">=<br/>半角大于号加等号，中间无空格。如：10>=2结果等于：true"
		}, {
			"id" : "<=",
            "text" : "<=(小于等于比较)",
            "decripHtml" : "<=<br/>半角小于号加等号，中间无空格。如：10<=2结果等于：false"
		}, {
			"id" : "||",
            "text" : "||(两条件至少一个成立)",
            "decripHtml" : "||<br/>两个半角|符号。如：myAge=29myAge<20||myAge>60结果等于：false"
		}, {
			"id" : "&&",
            "text" : "&&(两条件同时成立)",
            "decripHtml" : "&&<br/>两个半角&符号。如：myAge=29myAge>20&&myAge<30结果等于：true"
		} ]

	}, {
		"id" : "baseOper",
        "text" : "基本操作对象",
        "domType": "root",
		"children" : [ {
			"id" : "$.Y",
            "text" : "$.Y 当前的四位年",
            "decripHtml" : "$.Y<br/>当前时间的年份，四位有效数字。"
		}, {
			"id" : "$.y",
            "text" : "$.y 当前的两位年",
            "decripHtml" : "$.y<br/>当前时间的年份，两位有效数字。"
		}, {
			"id" : "$.M",
            "text" : "$.M 当前的两位月，不够两位在前面补0",
            "decripHtml" : "<br/>当前时间的月份，固定两位有效数字，不足高位补零。"
		}, {
			"id" : "$.m",
            "text" : "$.m 当前的月",
            "decripHtml" : "$.m<br/>当前时间的月份，如果是一月到九月，高位不会补零。"
		}, {
			"id" : "$.D",
            "text" : "$.D 当前的两位日，不够两位在前面补0",
            "decripHtml" : "$.D<br/>当前月份的日号值，固定两位有效数字，不足高位补零。"
		}, {
			"id" : "$.d",
            "text" : "$.d 当前的日",
            "decripHtml" : "$.d<br/>当前月份的日号值，如果是一号到九号，高位不会补零。"
		}, {
			"id" : "$.now()",
            "text" : "$.now() 当前时间的字符串",
            "decripHtml" : "$.now()<br/>当前时间，格式：yyyy-MM-dd HH:mm:ss"
		}, {
			"id" : "$.F",
            "text" : "$.F 表单对象",
            "decripHtml" : "$.F<br/>表单对象，用于访问表单数据。对应表单引擎接口“IFormService”（详细说明参见《iBase2.0[M0211]表单处理引擎.doc》）"
		}, {
			"id" : "$.F.getFieldValue()",
            "text" : "$.F.getFieldValue(strFormDomainName) 取字段值",
            "decripHtml" : "$.F.getFieldValue(String formDomainName)<br/>获取某个字段值。类型：Object，根据字段类型返回不同值类型，一般有：字符串、整数、小数、日期等。参数：formDomainName，字段唯一名。格式：“库表名$组名@RID.字段名>子表单字段”，如：JOB_A.FMJ、JOB_A$old.FMJ、JOB_A.F1>JOB_B@1df809ae-8a81-dc23-132038ae.SJ"
		}, {
			"id" : "$.F.getFormData()",
            "text" : "$.F.getFormData() 取所有字段值，返回Map对象，key为字段名，Value为字段值",
            "decripHtml" : "$.F.getFormData()<br/>获取表单所有字段名值对。类型：Map<String,Object>。"
		}, {
			"id" : "$.F.getBusinessno()",
            "text" : "$.F.getBusinessno() 取本业务的业务受理号",
            "decripHtml" : "$.F.getBusinessno()<br/>获取业务号"
		}, {
			"id" : "$.F.getFieldNames()",
            "text" : "$.F.getFieldNames() 取所有字段名，返回List",
            "decripHtml" : "$.F.getFieldNames()<br/>获取表单所有字段名。类型：List<String>。"
		} ]

	}, {
		"id" : "string",
        "text" : "字符串对象",
        "domType": "root",
		"children" : [ {
			"id" : "substr()",
            "text" : "substr(intStart,[intLen]) 截取字符串，长度可省略（表示获取到结尾）",
            "decripHtml" : "substr(start,end)<br/>start所需的子字符串的起始位置。字符串中的第一个字符的索引为0;end所需的子字符串的最后位置。例如，例如：var str = 'ABCDEF' str.substr(2,4); 结果：CDEF "
		}, {
			"id" : "indexOf()",
            "text" : "indexOf(strFind)(返回String对象内首次出现子字符串位置)",
            "decripHtml" : "indexOf()<br/>例如：var str = 'ABCDECDF' str.indexOf('CD'，1); 由1位置从左向右查找,结果：2 "
		}, {
			"id" : "lastIndexOf()",
            "text" : "lastIndexOf(strFind)(返回String对象内字符串最后出现的位置)",
            "decripHtml" : "lastIndexOf()<br/>该方法返回String对象中字符串最后出现的位置。如果没有匹配到子字符串，则返回-1。var str = 'ABCDECDF' str.lastIndexOf('CD',6);结果：5"
		}, {
			"id" : "split()",
            "text" : "split()(将字符串根据某符号转为数组)",
            "decripHtml" : "split()<br/>例如： var str = 'AA BB CC DD EE FF' alert(str.split(' '，3)); 结果： AA,BB,CC"
		}, {
			"id" : "toLowerCase()",
            "text" : "toLowerCase()(将字符串中的字母转换成小写)",
            "decripHtml" : "toLowerCase()<br/>例如： var str = 'ABCabc' str.toLowerCase(); 结果：abcabc "
		}, {
			"id" : "toUpperCase()",
            "text" : "toUpperCase()(将字符串中的字母转换成大写)",
            "decripHtml" : "toUpperCase()<br/>例如： var str = 'ABCabc' str.toUpperCase(); 结果：ABCABC"
		} ]

	}, {
		"id" : "otherObj",
        "text" : "其他对象",
        "domType": "root",
		"children" : [ {
			"id" : "true",
            "text" : "true(条件真)",
            "decripHtml" : "true<br/> 一般只用于赋值。如：isMan=true"
		}, {
			"id" : "false",
            "text" : "false(条件假)",
            "decripHtml" : "false<br/> 一般只用于赋值。如：isMan=false"
		}, {
			"id" : "null",
            "text" : "null(对象为空)",
            "decripHtml" : "null<br/>一般用于赋值或判断否为空。如：myObject=null;myNewObj!=null"
		}, {
			"id" : ".",
            "text" : ".(调用对象成员)",
            "decripHtml" : ".<br/>半角点号。与小数点一致，用于调用一个对象的成员方法或属性。如：DateTime.Now、'abc'.IndexOf('a')结果等于：此时的日期、0"
		}, {
			"id" : "[]",
            "text" : "[...](取列表元素值)",
            "decripHtml" : "[...]<br/>半角中括号。取数组、列表或字典元素值，数组、列表或字典无法直接创建，只能通过参数传入或由其它对象处理返回得到。如：myChar='abc'.ToCharArray();myChar[0]、myList[myList.Count-1]、myDic['123']"
		} ]

	} ]
},{
	"id" : "systemId",
    "text" : "系统配置",
    "domType": "root",
	"state" : "closed",
	"children" :[{
		"id" : "adminiId",
		"text" : "行政区划",
		"decripHtml" : "行政区划<br/>对应标识：adminiId"
	}, {
		"id" : "codeDicId",
		"text" : "代码字典",
		"decripHtml" : "代码字典<br/>对应标识：codeDicId"
	}]
},{
	"id" : "customId",
    "text" : "自定义",
    "domType": "root",
	"state" : "closed",
	"children" :[{
		"id" : "customId1",
		"text" : "自定义1",
		"decripHtml" : "自定义1<br/>对应标识：customId1。id是自定义表达式值"
	}]
} ]